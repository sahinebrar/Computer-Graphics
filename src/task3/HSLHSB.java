/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package task3;

import java.awt.Color;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.colorchooser.AbstractColorChooserPanel;

/**
 *
 * @author ebrarsahin
 */
public class HSLHSB extends javax.swing.JFrame {

    /**
     * Creates new form HSLHSB
     */
    float red,green,blue;
    float  temporary_1;
    float  temporary_2;
    public HSLHSB() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        btn_rgbTOhsl = new javax.swing.JToggleButton();
        jLabel9 = new javax.swing.JLabel();
        btn_hslTOrgb = new javax.swing.JToggleButton();
        jLabel10 = new javax.swing.JLabel();
        txt_blue2 = new javax.swing.JTextField();
        txt_red1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_green1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txt_b = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txt_h = new javax.swing.JTextField();
        txt_s = new javax.swing.JTextField();
        btn_rgbTOhsb = new javax.swing.JToggleButton();
        btn_hsbTOrgb = new javax.swing.JToggleButton();
        jLabel14 = new javax.swing.JLabel();
        txt_red2 = new javax.swing.JTextField();
        txt_green2 = new javax.swing.JTextField();
        txt_l = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_h1 = new javax.swing.JTextField();
        txt_blue1 = new javax.swing.JTextField();
        txt_s1 = new javax.swing.JTextField();
        saturation = new javax.swing.JSlider();
        huee = new javax.swing.JSlider();
        brightness = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lightness = new javax.swing.JSlider();
        aa = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setText("RED");

        btn_rgbTOhsl.setText("TO>>");
        btn_rgbTOhsl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rgbTOhslActionPerformed(evt);
            }
        });

        jLabel9.setText("GREEN");

        btn_hslTOrgb.setText("<<FROM");
        btn_hslTOrgb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hslTOrgbActionPerformed(evt);
            }
        });

        jLabel10.setText("BLUE");

        jLabel18.setText("RED");

        jLabel19.setText("GREEN");

        jLabel11.setText("HUE");

        jLabel12.setText("SATURATION");

        jLabel13.setText("BRIGHTNESS");

        btn_rgbTOhsb.setText("TO>>");
        btn_rgbTOhsb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rgbTOhsbActionPerformed(evt);
            }
        });

        btn_hsbTOrgb.setText("<<FROM");
        btn_hsbTOrgb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hsbTOrgbActionPerformed(evt);
            }
        });

        jLabel14.setText("BLUE");

        jLabel15.setText("HUE");

        jLabel16.setText("SATURATION");

        jLabel17.setText("LIGHTNESS");

        saturation.setPaintLabels(true);
        saturation.setValue(0);

        huee.setMaximum(360);
        huee.setPaintLabels(true);
        huee.setValue(0);

        brightness.setPaintLabels(true);
        brightness.setValue(0);

        jLabel1.setText("Hue");

        jLabel2.setText("Saturation");

        jLabel3.setText("Brightness");

        lightness.setPaintLabels(true);
        lightness.setPaintTicks(true);
        lightness.setToolTipText("");
        lightness.setValue(0);

        aa.setText("Lightness");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saturation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(huee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aa))
                .addGap(32, 32, 32))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel18)
                                .addComponent(jLabel14)
                                .addComponent(jLabel19))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_blue2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_green2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_hslTOrgb, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(txt_red2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_rgbTOhsl, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_s1)
                                .addComponent(txt_h1)
                                .addComponent(txt_l, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel16))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel8)
                                .addComponent(jLabel10))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_red1)
                                .addComponent(txt_green1)
                                .addComponent(txt_blue1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn_hsbTOrgb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_rgbTOhsb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_s)
                                .addComponent(txt_b, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_h, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel12)))))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(huee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saturation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(aa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(160, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(txt_red1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_rgbTOhsb))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_green1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel10)
                                        .addComponent(txt_blue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addComponent(btn_hsbTOrgb))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(txt_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(txt_b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(txt_h1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_rgbTOhsl)
                                .addComponent(txt_red2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_s1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_green2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel17)
                                .addComponent(txt_l, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_blue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(51, 51, 51)
                            .addComponent(btn_hslTOrgb)))
                    .addGap(35, 35, 35)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_rgbTOhslActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rgbTOhslActionPerformed
        // TODO add your handling code here:
        JColorChooser cc = new JColorChooser();
        AbstractColorChooserPanel[] panels = cc.getChooserPanels();
        for (AbstractColorChooserPanel accp : panels) {
            if (accp.getDisplayName().equals("RGB")) {
                int reply=JOptionPane.showConfirmDialog(null, accp,"Choose RGB Color", JOptionPane.OK_CANCEL_OPTION);
                if(reply== JOptionPane.OK_OPTION){

                    red = cc.getColor().getRed(); txt_red2.setText(red+"");
                    green = cc.getColor().getGreen(); txt_green2.setText(green+"");
                    blue = cc.getColor().getBlue(); txt_blue2.setText(blue+"");

                    float hsl[]=rgbToHsl(red,green,blue);
                    txt_h1.setText(hsl[0]+"");
                    txt_s1.setText(hsl[1]+"");
                    txt_l.setText(hsl[2]+"");

                }
            }
        }
    }//GEN-LAST:event_btn_rgbTOhslActionPerformed

    private void btn_hslTOrgbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hslTOrgbActionPerformed
        // TODO add your handling code here:
        
        float sat= saturation.getValue(); 
        float lig=lightness.getValue();   
        float hue=huee.getValue();        
        txt_h1.setText(hue + "");
        txt_s1.setText(sat + "");
        txt_l.setText(lig + "");
        hue/=100;
        lig/=100;
        sat/=100;
        if(sat==0){
            
            red=(int) (lig*255);
            green=(int) (lig*255);
            blue=(int) (lig*255);
        }
        else{
            if(sat<0.5){
                temporary_1 = (lig * (1+sat));
            }
            else{
                temporary_1 = lig + sat - lig * sat;
            }
            temporary_2 =  (2 * lig-temporary_1);
            hue=hue/360;
            float temporary_R = (float) (hue + 0.333);
                if(temporary_R<0)
                    temporary_R+=1;
                if(temporary_R>1)
                    temporary_R-=1;
            float temporary_G = hue;
                if(temporary_G<0)
                    temporary_G+=1;
                if(temporary_G>1)
                    temporary_G-=1;
            float temporary_B = (float) (hue - 0.333) ;
                if(temporary_B<0)
                    temporary_B+=1;
                if(temporary_B>1)
                    temporary_B-=1;
                
                red=getMyRed(temporary_R)*255;
                green=getMyGreen(temporary_G)*255;
                blue=getMyBlue(temporary_B)*255;
        }
        txt_red2.setText(red + "");
        txt_green2.setText(green + "");
        txt_blue2.setText(blue+ "");
        //http://www.niwa.nu/2013/05/math-behind-colorspace-conversions-rgb-hsl/
    }//GEN-LAST:event_btn_hslTOrgbActionPerformed

    private void btn_rgbTOhsbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rgbTOhsbActionPerformed
        // TODO add your handling code here:
        JColorChooser cc = new JColorChooser();
        AbstractColorChooserPanel[] panels = cc.getChooserPanels();
        for (AbstractColorChooserPanel accp : panels) {
            if (accp.getDisplayName().equals("RGB")) {
                int reply=JOptionPane.showConfirmDialog(null, accp,"Choose RGB Color", JOptionPane.OK_CANCEL_OPTION);
                if(reply== JOptionPane.OK_OPTION){

                    int red = cc.getColor().getRed(); txt_red1.setText(red+"");
                    int green = cc.getColor().getGreen(); txt_green1.setText(green+"");
                    int blue = cc.getColor().getBlue(); txt_blue1.setText(blue+"");

                    float [] hsb=Color.RGBtoHSB(red, green, blue, null);

                    txt_h.setText(hsb[0]+"");
                    txt_s.setText(hsb[1]+"");
                    txt_b.setText(hsb[2]+"");

                    
                }
            }
        }
    }//GEN-LAST:event_btn_rgbTOhsbActionPerformed

    private void btn_hsbTOrgbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hsbTOrgbActionPerformed
        // TODO add your handling code here:
        float sat= saturation.getValue();
        float bri=brightness.getValue();
        float hue=huee.getValue();
        
        txt_h.setText(hue + "");
        txt_s.setText(sat + "");
        txt_b.setText(bri + "");
        hue/=100;
        bri/=100;
        sat/=100;
        
        float rgb []= HSVtoRGB(hue, sat, bri);
        txt_red1.setText(rgb[0] *255+ "");
        txt_green1.setText(rgb[1]*255 + "");
        txt_blue1.setText(rgb[2]*255 + "");
                            
    }//GEN-LAST:event_btn_hsbTOrgbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HSLHSB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HSLHSB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HSLHSB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HSLHSB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HSLHSB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aa;
    private javax.swing.JSlider brightness;
    private javax.swing.JToggleButton btn_hsbTOrgb;
    private javax.swing.JToggleButton btn_hslTOrgb;
    private javax.swing.JToggleButton btn_rgbTOhsb;
    private javax.swing.JToggleButton btn_rgbTOhsl;
    private javax.swing.JSlider huee;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSlider lightness;
    private javax.swing.JSlider saturation;
    private javax.swing.JTextField txt_b;
    private javax.swing.JTextField txt_blue1;
    private javax.swing.JTextField txt_blue2;
    private javax.swing.JTextField txt_green1;
    private javax.swing.JTextField txt_green2;
    private javax.swing.JTextField txt_h;
    private javax.swing.JTextField txt_h1;
    private javax.swing.JTextField txt_l;
    private javax.swing.JTextField txt_red1;
    private javax.swing.JTextField txt_red2;
    private javax.swing.JTextField txt_s;
    private javax.swing.JTextField txt_s1;
    // End of variables declaration//GEN-END:variables
        private float [] rgbToHsl(float r1, float g1, float b1) {
        float r = (float)(r1/255);
        float g =(float) (g1/255);
        float b = (float) b1/255;
        int max = (int) Math.max(b,Math.max(r, g));
        int min = (int) Math.min(b,Math.min(r, g));
        float h= 0;
        float s=0;
        float l= ((max + min) / 2)*100;
        
        if (max == min) {
            s = 0; // achromatic
        } 
        else {
            if(l>50){
                s= 100*((max-min)/(2-max-min));
            }
            else{
                s=100*((max-min)/(max+min));
            }
        }
        
        if(max==r){
            h=(int) (100*((g-b)/(max-min)));
        }
        else if(max==g){
            h=(int) (100*((2.0 + (b-r)/(max-min))));
        }
        else if(max== b){
            h=(int) (100*(4.0 + (r-g)/(max-min)));
        }
        float hsl[]={h,s,l};
        return hsl;
    }

    private float getMyRed(float temporary_R) {
        if(6*temporary_R<1){
            red =  (temporary_2 + (temporary_1 - temporary_2) * 6 * temporary_R);
        }
        else if(2*temporary_R<1 /*|| 6*temporary_R>1*/){
            red = temporary_1;
        }
        else if(3*temporary_R<2 /*|| 2*temporary_R>1*/){
            red = (float) (temporary_2 + (temporary_1 - temporary_2) * (0.666 - temporary_R) * 6);
        }
        else if(3*temporary_R>2){
            red =  temporary_2;
        }
        return red;
    }

    private float getMyGreen(float temporary_G) {
        if(6*temporary_G<1){
            green = (temporary_2 + (temporary_1 - temporary_2) * 6 * temporary_G);
        }
        else if(2*temporary_G<1 /*|| 6*temporary_G>1*/){
            green =  temporary_1;
        }
        else if(3*temporary_G<2 /*|| 2*temporary_G>1*/){
            green = (float) (temporary_2 + (temporary_1 - temporary_2) * (0.666 - temporary_G) * 6);
        }
        else if(3*temporary_G>2){
            green =  temporary_2;
        }
        return green;
    }
    
    private float getMyBlue(float temporary_B) {
        if(6*temporary_B<1){
            blue = (temporary_2 + (temporary_1 - temporary_2) * 6 * temporary_B);
        }
        else if(2*temporary_B<1 /*|| 6*temporary_B>1*/){
            blue =  temporary_1;
        }
        else if(3*temporary_B<2 /*|| 2*temporary_B>1*/){
            blue =  (float) (temporary_2 + (temporary_1 - temporary_2) * (0.666 - temporary_B) * 6);
        }
        else if(3*temporary_B>2){
            blue = temporary_2;
        }
        return blue;
    }
    
    public float[] HSVtoRGB(float h, float s, float v) {
        // H is given on [0->6] or -1. S and V are given on [0->1].
        // RGB are each returned on [0->1].
        float m, n, f;
        int i;

        float[] hsv = new float[3];
        float[] rgb = new float[3];

        hsv[0] = h;
        hsv[1] = s;
        hsv[2] = v;

        if (hsv[0] == -1) {
            rgb[0] = rgb[1] = rgb[2] = hsv[2];
            return rgb;
        }
        i = (int) (Math.floor(hsv[0]));
        f = hsv[0] - i;
        if (i % 2 == 0) {
            f = 1 - f; // if i is even
        }
        m = hsv[2] * (1 - hsv[1]);
        n = hsv[2] * (1 - hsv[1] * f);
        switch (i) {
            case 6:
            case 0:
                rgb[0] = hsv[2];
                rgb[1] = n;
                rgb[2] = m;
                break;
            case 1:
                rgb[0] = n;
                rgb[1] = hsv[2];
                rgb[2] = m;
                break;
            case 2:
                rgb[0] = m;
                rgb[1] = hsv[2];
                rgb[2] = n;
                break;
            case 3:
                rgb[0] = m;
                rgb[1] = n;
                rgb[2] = hsv[2];
                break;
            case 4:
                rgb[0] = n;
                rgb[1] = m;
                rgb[2] = hsv[2];
                break;
            case 5:
                rgb[0] = hsv[2];
                rgb[1] = m;
                rgb[2] = n;
                break;
        }

        return rgb;

    }
}
